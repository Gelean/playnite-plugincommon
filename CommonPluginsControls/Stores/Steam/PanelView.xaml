<UserControl x:Class="CommonPluginsControls.Stores.Steam.PanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CommonPluginsControls.Stores.Steam" 
             xmlns:stores="clr-namespace:CommonPluginsStores" 
             xmlns:pcmd="clr-namespace:CommonPluginsShared"
             d:DataContext="{d:DesignInstance Type=local:PanelViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" d:DesignWidth="500">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    
    <Expander Grid.Row="0">
        <Expander.Style>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Expander.Style>

        <Expander.Header>
            <TextBlock Text="Steam" Style="{StaticResource BaseTextBlockStyle}" />
        </Expander.Header>

        <Expander.Content>
            <Border Margin="5" Padding="10"
				    BorderBrush="{DynamicResource PopupBorderBrush}"
				    BorderThickness="{DynamicResource PopupBorderThickness}">
                
                <StackPanel>
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Style="{StaticResource BaseTextBlockStyle}" Text="{DynamicResource LOCCommonAccountName}" />
                        <TextBlock Grid.Column="2" Style="{StaticResource BaseTextBlockStyle}" Text="{Binding User.PersonaName, FallbackValue=unknown}" />

                        <TextBlock Grid.Column="6" HorizontalAlignment="Right">
                            <TextBlock.Tag>
                                <PriorityBinding>
                                    <Binding Path="User.AccountStatus" IsAsync="True" FallbackValue="{x:Static stores:AccountStatus.Checking}" />
                                    <Binding Source="{x:Static stores:AccountStatus.Checking}" />
                                </PriorityBinding>
                            </TextBlock.Tag>

                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                                    <Style.Triggers>
                                        <Trigger Property="Tag" Value="{x:Static stores:AccountStatus.Private}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamPrivateAccount}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static stores:AccountStatus.Public}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamPublicAccount}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static stores:AccountStatus.Checking}">
                                            <Setter Property="Text" Value="{DynamicResource LOCCommonPrivateChecking}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10" Visibility="{Binding UseAuth, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel.Tag>
                            <PriorityBinding>
                                <Binding Path="User.AccountStatus" IsAsync="True" FallbackValue="{x:Static stores:AccountStatus.Checking}" />
                                <Binding Source="{x:Static stores:AccountStatus.Checking}" />
                            </PriorityBinding>
                        </StackPanel.Tag>
                        
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <Trigger Property="Tag" Value="{x:Static stores:AccountStatus.Private}">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        
                        <Button Content="{DynamicResource LOCSteamAuthenticateLabel}" Command="{Binding LoginCommand}"/>

                        <TextBlock VerticalAlignment="Center" Margin="10,0,0,0">
                            <TextBlock.Tag>
                                <PriorityBinding>
                                    <Binding Path="AuthStatus" IsAsync="True" />
                                    <Binding Source="{x:Static stores:AuthStatus.Checking}" />
                                </PriorityBinding>
                            </TextBlock.Tag>

                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                                    <Style.Triggers>
                                        <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.Checking}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamLoginChecking}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.Ok}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamLoggedIn}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.AuthRequired}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamNotLoggedIn}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.PrivateAccount}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamRequiresApiKey}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.Failed}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamNotLoggedInError}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding UseApi, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="{DynamicResource LOCSteamAPIKey}" VerticalAlignment="Center"/>

                        <PasswordBox local:PasswordBoxAssistant.BindPassword="True"
                                     local:PasswordBoxAssistant.BoundPassword="{Binding User.ApiKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=150}"
                                     Width="300" VerticalAlignment="Center" Margin="10,0,10,0" />

                        <TextBlock VerticalAlignment="Center">
                            <Hyperlink NavigateUri="https://steamcommunity.com/dev/apikey"
                                       Command="{x:Static pcmd:Commands.NavigateUrl}"
                                       CommandParameter="{Binding NavigateUri, RelativeSource={RelativeSource Self}}">
                                <Run Text="{DynamicResource LOCSettingsApiKeyUrlText}" />
                            </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Expander.Content>
    </Expander>
</UserControl>
