<UserControl x:Class="CommonPluginsControls.Stores.Epic.PanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CommonPluginsControls.Stores.Steam" 
             xmlns:stores="clr-namespace:CommonPluginsStores" 
             xmlns:pcmd="clr-namespace:CommonPluginsShared" 
             xmlns:converters="clr-namespace:CommonPlayniteShared.Converters"
             d:DataContext="{d:DesignInstance Type=local:PanelViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" d:DesignWidth="600">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InvertedBoolenConverter x:Key="InvertedBoolenConverter" />
        <converters:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter" />
    </UserControl.Resources>
    
    <Expander Grid.Row="0">
        <Expander.Style>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Expander.Style>

        <Expander.Header>
            <TextBlock Text="Epic" Style="{StaticResource BaseTextBlockStyle}" />
        </Expander.Header>

        <Expander.Content>
            <Border Margin="5" Padding="10"
				    BorderBrush="{DynamicResource PopupBorderBrush}"
				    BorderThickness="{DynamicResource PopupBorderThickness}">
                
                <StackPanel>
                    <!-- User infos -->
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Style="{StaticResource BaseTextBlockStyle}" Text="{DynamicResource LOCCommonAccountName}" />
                        <TextBlock Grid.Column="2" Style="{StaticResource BaseTextBlockStyle}" Text="{Binding User.Pseudo}" />

                        <Image Grid.Column="4" Source="{Binding User.Avatar, IsAsync=True}" Height="32" Width="32" HorizontalAlignment="Left" />
                    </Grid>

                    <Border CornerRadius="{DynamicResource ControlCornerRadius}" BorderThickness="{DynamicResource ControlBorderThickness}" 
                            Background="Transparent" Padding="10,0,10,10" BorderBrush="{DynamicResource NormalBorderBrush}">

                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                <StackPanel.Tag>
                                    <PriorityBinding>
                                        <Binding Path="User.AccountStatus" IsAsync="True" FallbackValue="{x:Static stores:AccountStatus.Checking}" />
                                        <Binding Source="{x:Static stores:AccountStatus.Checking}" />
                                    </PriorityBinding>
                                </StackPanel.Tag>

                                <Button Content="{DynamicResource LOCCommonAuthenticateLabel}" Command="{Binding LoginCommand}"/>

                                <TextBlock VerticalAlignment="Center" Margin="10,0,0,0">
                                    <TextBlock.Tag>
                                        <PriorityBinding>
                                            <Binding Path="AuthStatus" IsAsync="True" />
                                            <Binding Source="{x:Static stores:AuthStatus.Checking}" />
                                        </PriorityBinding>
                                    </TextBlock.Tag>

                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                                            <Style.Triggers>
                                                <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.Checking}">
                                                    <Setter Property="Text" Value="{DynamicResource LOCCommonLoginChecking}" />
                                                </Trigger>
                                                <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.Ok}">
                                                    <Setter Property="Text" Value="{DynamicResource LOCCommonLoggedIn}" />
                                                </Trigger>
                                                <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.AuthRequired}">
                                                    <Setter Property="Text" Value="{DynamicResource LOCCommonNotLoggedIn}" />
                                                </Trigger>
                                                <Trigger Property="Tag" Value="{x:Static stores:AuthStatus.Failed}">
                                                    <Setter Property="Text" Value="{DynamicResource LOCCommonNotLoggedInError}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>
        </Expander.Content>
    </Expander>
</UserControl>
